<h1>FAQ</h1>
<h5>環境変数を利用することは出来ますか?</h5>
<p>はい。<code>port</code>と<code>environment</code>環境の選択を環境変数を用いて設定することも出来ます。
<code>NODE_ENV=production sails lift</code>
<code>PORT=443 sails lift</code></p>
<h5>プロダクション環境のデータベースの認証情報などはどこに置けばいいですか。?</h5>
<p>その他のdeployment/machine-specificな設定（様々な認証情報を含む）に関しては<code>config/local.js</code>を使うべきです。
このファイルはデフォルトで<code>.gitignore</code>に登録されているのでうっかり認証情報の入ったファイルをレポジトリにアップロードしてしまう心配がありません。</p>
<p><strong>config/local.js</strong></p>
<pre><code class="language-javascript">// ローカル設定
// 
// デフォルトで.gitignoreに入っています。
// ここはあなたのローカルのシステムやプロダクション環境に合わせた設定のオーバーライドを書くところです。
// あるいは、本番環境へのデプロイには
//
// 例えばローカルマシンの80番ポートを利用するためには`port`設定をオーバーライドします。
module.exports = {
    port: 80,
    environment: 'production',
    adapters: {
        mysql: {
            user: 'root',
            password: '12345'
        }
    }
}</code></pre>
<h5>Sailをプロダクション環境のサーバにどうやってアップロードすればいいですか。</h5>
<p>すでにNode.jsのサーバが走っていますか。サーバのIPアドレスが分かるのであればそこにSSHアクセスし、最初に<code>sudo npm install -g forever</code>を実行してSailsとforeverをセットアップしてください。</p>
<p>その後、新規フォルダーを作成しそこにプロジェクトを<code>git clone</code>（もしgitレポジトリがないなら<code>scp</code>を）してください。さらにそのフォルダにcdし、<code>forever start app.js</code>でサーバを起動します。</p>
<h3>パフォーマンスのベンチマーク</h3>
<p>SailsのパフォーマンスはNode.js/Express相当です。つまり別の言葉で言えば「速い！」SailsとWaterlineにおいて幾らかのチューニングをしていますが、我々の第一の目標は「元々ものすごく速いものを台無しにしない」というものです。いずれにせよ@ry, @visionmedia, @isaacs, #v8, @joyentを始めとしたNode.jsのコアチームに感謝します。</p>
<ul>
<li><a href="http://serdardogruyol.com/?p=111">http://serdardogruyol.com/?p=111</a></li>
</ul>
<p>問題<a href="https://github.com/balderdashy/sails/issues/3099">#3099</a> と <a href="https://github.com/balderdashy/sails/issues/2779">#2779</a>はメモリリークに関するものです。これはデフォルトで利用され、セッションをメモリ内に保管する<code>express-session</code>に存在する問題です。
これを無効化するには<code>.sailsrc</code>でセッションを無効化してください。:</p>
<pre><code>"hooks": {
  "session": false
}</code></pre>
<p>セッションを保管する別の方法(redis/mongo/cookies)もあります。</p>
<docmeta name="uniqueID" value="FAQ475097">
<docmeta name="displayName" value="FAQ">