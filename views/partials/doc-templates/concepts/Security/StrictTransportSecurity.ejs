<h1>HTTP Strict Transport Security</h1>
<p>HTTP Strict Transport Security(STS)は <code>HTTP</code>の代わりに<code>HTTPS</code>を利用させることを強制するオプショナルなセキュリティ強化策です。</p>
<h3>STSを有効化する</h3>
<p>実はSTSを実装するにはとてもシンプルで<a href="https://github.com/krakenjs/lusca/blob/master/lib/hsts.js">数行のコードを書くだけで</a>できます。しかし、更に良いことにSailsとExpressでこの機能を実現できる幾つかのオープンソースモジュールがあります。これらのモジュールを使うには以下の手順に従ってnpmからインストールしてアプリケーションの<code>config/http.js</code>の中で<a href="http://sailsjs.jp/documentation/concepts/Middleware">カスタムのミドルウエアとして設定</a>してください。以下の例で簡単な使い方があります。詳しい説明や応用的な使い方は下記にあるリンクを参照してください。</p>
<h5><a href="https://github.com/krakenjs/lusca#luscahstsoptions">lusca</a>を使う</h5>
<blockquote>
<p><code>lusca</code> は<a href="https://github.com/krakenjs/lusca/blob/master/LICENSE.txt">Apache license</a>で使えるオープンソースです。</p>
</blockquote>
<pre><code class="language-sh"># In your sails app
npm install lusca --save</code></pre>
<p>そして、<code>config/http.js</code>の<code>middleware</code>設定オブジェクトで:</p>
<pre><code class="language-js">  // ...
  // maxAge ==&gt; Number of seconds strict transport security will stay in effect.
  strictTransportSecurity: require('lusca').hsts({ maxAge: 31536000 })
  // ...</code></pre>
<h3>追加資料</h3>
<ul>
<li><a href="https://www.owasp.org/index.php/HTTP_Strict_Transport_Security">HTTP Strict Transport Security (OWasp)</a></li>
</ul>
<docmeta name="uniqueID" value="HSTSecurity397141">
<docmeta name="displayName" value="Strict Transport Security">