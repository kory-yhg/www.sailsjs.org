<h1>P3P</h1>
<h3>背景</h3>
<p>P3Pは&quot;Platform for Privacy Preferences&quot;の略であり、利用者側でのより良いプライバシー制御を行うためのブラウザ/Web標準です。現在（2014年）メジャーなブラウザのうちInternet Explorerのみがサポートしています。これは主にレガシーなWebアプリケーションを扱うために使われます。</p>
<p>多くのモダンな組織は完全にP3Pを無視しています、以下にこのテーマについて<a href="https://www.facebook.com/help/327993273962160/">Facebookが言及した</a>事を挙げておきます。:</p>
<blockquote>
<p>P3Pを立ち上げた組織であるW3Cがこの活動を何年か前にやめてしまったために多くのモダンなブラウザはP3Pをフルサポートしていません。その結果P3P標準はすでに時代遅れであり、現在Webで使われている技術を反映していません。だから多くのWebサイトが現在のところP3Pに対応していないのです。</p>
<p>以下もご覧ください: <a href="http://www.zdnet.com/blog/facebook/facebook-to-microsoft-p3p-is-outdated-what-else-ya-got/9332">http://www.zdnet.com/blog/facebook/facebook-to-microsoft-p3p-is-outdated-what-else-ya-got/9332</a></p>
</blockquote>
<h3>SailsでP3Pに対応する</h3>
<p>そういうことはさておき、時にはP3Pをサポートしなければならない時もあります。</p>
<p>幸いP3P関連のヘッダーを有効化することでSailsとExpressでP3P対応をすることのできるモジュールはいくつかあります。これらのモジュールを使ってP3Pヘッダを扱うためには以下の説明ししたがってnpmを使ってモジュールをインストールしてからプロジェクトの<code>config/http.js</code>を開いてカスタムのミドルウエアとして追加してください。これを行うにはお使いのP3Pミドルウエアを&quot;p3p&quot;として定義して&quot;p3p&quot;の文字列を<code>middleware.order</code>のミドルウエアチェーンの中の任意の場所に追加してください。（<code>cookieParser</code>の直前が良いでしょう。）:</p>
<p><code>config/http.js</code>で:</p>
<pre><code class="language-js">// .....
module.exports.http = {

  middleware: {

    p3p: require('p3p')(p3p.recommmended), // &lt;==== set up the custom middleware here and named it "p3p"

    order: [
      'startRequestTimer',
      'p3p', // &lt;============ configured the order of our "p3p" custom middleware here
      'cookieParser',
      'session',
      'bodyParser',
      'handleBodyParserError',
      'compress',
      'methodOverride',
      'poweredBy',
      '$custom',
      'router',
      'www',
      'favicon',
      '404',
      '500'
    ],
    // .....
  }
};</code></pre>
<p>より詳しくは以下の例をご覧ください。また、お使いのモジュールの最新情報、互換性分析や最新のバグフィックス、高度な利用方法に関しては以下のリンク先にアクセスして各モジュールのドキュメントをご確認ください。</p>
<h5><a href="https://github.com/troygoode/node-p3p">node-p3p</a>を使う</h5>
<blockquote>
<p><code>node-p3p</code>は<a href="https://github.com/troygoode/node-p3p/blob/master/LICENSE">MIT license</a>で利用できるオープンソースです.</p>
</blockquote>
<pre><code class="language-sh"># In your sails app
npm install p3p --save</code></pre>
<p>そして<code>config/http.js</code>の<code>middleware</code>設定オブジェクトで:</p>
<pre><code class="language-js">  // ...
  // node-p3p provides a recommended compact privacy policy out of the box
  p3p: require('p3p')(require('p3p').recommended)
  // ...</code></pre>
<h5><a href="https://github.com/krakenjs/lusca#luscap3pvalue">lusca</a>を使う</h5>
<blockquote>
<p><code>lusca</code>は<a href="https://github.com/krakenjs/lusca/blob/master/LICENSE.txt">Apache license</a>で利用できるオープンソースです.</p>
</blockquote>
<pre><code class="language-sh"># In your sails app
npm install lusca --save</code></pre>
<p>そして<code>config/http.js</code>の<code>middleware</code>設定オブジェクトで:</p>
<pre><code class="language-js">  // ...
  // "ABCDEF" ==&gt; The compact privacy policy to use.
  p3p: require('lusca').p3p('ABCDEF')
  // ...</code></pre>
<h3>追加資料:</h3>
<ul>
<li><a href="http://support.microsoft.com/kb/290333">Description of the P3P Project (Microsoft)</a></li>
<li><a href="http://www.w3.org/P3P/">&quot;P3P Work suspended&quot; (W3C)</a></li>
<li><a href="http://compactprivacypolicy.org/compact_specification.htm">P3P Compact Specification (CompactPrivacyPolicy.org)</a></li>
</ul>
<docmeta name="uniqueID" value="P3P183449">
<docmeta name="displayName" value="P3P">