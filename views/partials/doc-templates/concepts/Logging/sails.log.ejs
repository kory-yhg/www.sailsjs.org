<h1>sails.log()</h1>
<h3>概要</h3>
<p>以下に挙げる各メソッドはカンマで区切られた無限個の引数をタイプにかかわらず受け取ります。<code>console.log</code>のように、渡された各引数はSailsのロガーによって<a href="http://nodejs.org/api/util.html#util_util_inspect_object_options"><code>util.inspect()</code></a>を利用して読解可能な形に自動的に変換されます。その結果通常のNode.jsとの互換性が維持されています。すなわち、<code>inspect()</code>メソッドを使ってオブジェクトをログした時にはそれが自動的に実行され、その戻り値の文字列がコンソールに出力されます。同じようにオブジェクトや日付、配列などほとんどのデータ型がビルトインの<code>util.inspect()</code>メソッドにより読みやすく変換されます。(例えば<code>[object Object]</code>の代わりに<code>{ pet: { name: 'Hamlet' } }</code>と表示されます。</p>
<h3><code>sails.log()</code></h3>
<p>デフォルトのログファンクションです。ログレベルが&quot;debug&quot;の時に<code>stderr</code>に対してコンソール出力します。</p>
<pre><code class="language-js">sails.log('hello');
// -&gt; debug: hello.</code></pre>
<h3><code>sails.log.error()</code></h3>
<p>ログレベルが&quot;error&quot;の時に<code>stderr</code>に対してコンソール出力します。</p>
<pre><code class="language-js">sails.log.error('Unexpected error occurred.');
// -&gt; error: Unexpected error occurred.</code></pre>
<h3><code>sails.log.warn()</code></h3>
<p>ログレベルが&quot;warn&quot;の時に<code>stderr</code>に対してコンソール出力します。</p>
<pre><code class="language-js">sails.log.warn('File upload quota exceeded for user','request aborted.');
// -&gt; warn: File upload quota exceeded for user- request aborted.</code></pre>
<h3><code>sails.log.debug()</code></h3>
<p><em><code>sails.log()</code>のエイリアスです。</em></p>
<h3><code>sails.log.info()</code></h3>
<p>ログレベルが&quot;info&quot;の時に<code>stdout</code>に対してコンソール出力します。</p>
<pre><code class="language-js">sails.log.info('A new user (', 'mike@foobar.com', ') just signed up!');
// -&gt; info: A new user ( mike@foobar.com ) just signed up!</code></pre>
<h3><code>sails.log.verbose()</code></h3>
<p>ログレベルが&quot;verbose&quot;の時に<code>stdout</code>に対してコンソール出力します。
あまりよく有効化することはないと思いますが、アプリケーションに関する詳細なログを取得したいときに便利です。</p>
<pre><code class="language-js">sails.log.verbose('A user initiated an account transfer...')
// -&gt; verbose: A user initiated an account transfer...</code></pre>
<h3><code>sails.log.silly()</code></h3>
<p>ログレベルが&quot;silly&quot;の時に<code>stdout</code>に対してコンソール出力します。
アプリケーションに関する、ほとんど利用することのないような全く馬鹿げた情報を取得したいときに便利です。</p>
<pre><code class="language-js">sails.log.silly('A user probably clicked on something..?');
// -&gt; silly: A user probably clicked on something..?</code></pre>
<docmeta name="uniqueID" value="sailslog321347">
<docmeta name="displayName" value="sails.log()">