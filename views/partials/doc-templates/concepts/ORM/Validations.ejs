<h1>バリデーション</h1>
<p>Sailsはモデルのアトリビュートに対する自動バリデーションを用意しています。レコードを作成したり更新するときは常にあなたの指定したバリデーションルールにそっているか自動的に確認されます。これにより、アプリケーションに保存されるデータが不正なものでないことを保証することが簡単に実現出来ます。</p>
<h3>バリデーションルール</h3>
<p>バリデーションは<a href="https://github.com/chriso/validator.js">バリデータ</a>の最上位層に位置する<a href="https://github.com/balderdashy/anchor">Anchor</a>と呼ばれる軽量なレイヤーによってハンドルされます。AncherはNode.jsで最もパワフルなバリデータの一つです。<code>unique</code>のように一部にデータベース上での実装がなされていることが必要な物は有りますが、Sailsではバリデータの中のほとんどすべての種類のバリデーションをサポートします。</p>
<table>
<thead>
<tr>
<th>バリデータ名</th>
<th>確認するもの</th>
<th>利用上の注意</th>
</tr>
</thead>
<tbody>
<tr>
<td>after</td>
<td>入力された日付の文字列が指定日より後のものか。</td>
<td>正しいJavascriptのDate形式である必要があります。</td>
</tr>
<tr>
<td>alpha</td>
<td>アルファベッドのみ(a-zA-Z)を含む文字列かどうか。</td>
<td></td>
</tr>
<tr>
<td>alphadashed</td>
<td></td>
<td>アルファベットとダッシュのみを含む文字列であるかどうか。）</td>
</tr>
<tr>
<td>alphanumeric</td>
<td>アルファベッドと数字のみを含む文字列かどうか。</td>
<td></td>
</tr>
<tr>
<td>alphanumericdashed</td>
<td>アルファベッド、数字、ダッシュのみを含む文字列かどうか。</td>
<td></td>
</tr>
<tr>
<td>array</td>
<td>正しいJavascriptの配列形式であるか。</td>
<td>「配列化された文字列」はパスしない。</td>
</tr>
<tr>
<td>before</td>
<td>入力された日付の文字列が指定日より前のものか。</td>
<td></td>
</tr>
<tr>
<td>binary</td>
<td>バイナリデータか</td>
<td>文字列であれば常にパスします。</td>
</tr>
<tr>
<td>boolean</td>
<td>正しいJavascriptのBoolean形式であるか。</td>
<td>文字列はパスしない。</td>
</tr>
<tr>
<td>contains</td>
<td>文字列がseedを含んでいるかどうか</td>
<td></td>
</tr>
<tr>
<td>creditcard</td>
<td>文字列はクレジットカードの形式かどうか。</td>
<td></td>
</tr>
<tr>
<td>date</td>
<td>文字列は日付型かどうか。</td>
<td>文字列とJavascript型のどちらでもパスする。</td>
</tr>
<tr>
<td>datetime</td>
<td>文字列はJavascriptのdatetime型かどうか。</td>
<td></td>
</tr>
<tr>
<td>decimal</td>
<td></td>
<td>小数点を含むかあるいは１より小さいか。</td>
</tr>
<tr>
<td>email</td>
<td>文字列はメールアドレスのように見えるか。</td>
<td></td>
</tr>
<tr>
<td>empty</td>
<td>長さが０で数えられるプロパティもない配列と文字列、引数オブジェクトが &quot;empty&quot;とみなされます。</td>
<td>lo-dash _.isEmpty()</td>
</tr>
<tr>
<td>equals</td>
<td>文字列は指定された内容と同じか。</td>
<td>=== ! 型と値が合致してる必要があります。</td>
</tr>
<tr>
<td>falsey</td>
<td>JavascriptエンジンがFalseとみなすものかどうか。</td>
<td></td>
</tr>
<tr>
<td>finite</td>
<td>値または値から変換できる数が有限数かどうか。</td>
<td>True時にBoolを、False時にからの文字列を返すネイティブのisFiniteとは同じでありません。</td>
</tr>
<tr>
<td>float</td>
<td>Floatがたの数値化どうか。</td>
<td></td>
</tr>
<tr>
<td>hexadecimal</td>
<td>十六進の数値かどうか</td>
<td></td>
</tr>
<tr>
<td>hexColor</td>
<td>十六進色表記かどうか</td>
<td></td>
</tr>
<tr>
<td>in</td>
<td>指定された文字列のうちいずれかと合致するものであるか。</td>
<td></td>
</tr>
<tr>
<td>int</td>
<td>文字列は整数型であるか。</td>
<td></td>
</tr>
<tr>
<td>integer</td>
<td>intと同じ。</td>
<td>どうしてこの両方が存在するかはわかりません。</td>
</tr>
<tr>
<td>ip</td>
<td>文字列は正しいIP(v4またはv6)アドレスかどうか。</td>
<td></td>
</tr>
<tr>
<td>ipv4</td>
<td>文字列は正しいIP(v4)アドレスかどうか。</td>
<td></td>
</tr>
<tr>
<td>ipv6</td>
<td>文字列は正しいIP(v6)アドレスかどうか。</td>
<td></td>
</tr>
<tr>
<td>is</td>
<td></td>
<td>REGEXと一緒に使います。</td>
</tr>
<tr>
<td>json</td>
<td>正しいJSON型かどうかTry and Catchします。</td>
<td></td>
</tr>
<tr>
<td>len</td>
<td>与えられた整数 &gt; param1 &amp;&amp; &lt; param2であるかどうか</td>
<td>どうやってParamを設定するんだろうか。。。</td>
</tr>
<tr>
<td>lowercase</td>
<td>文字列は全て小文字であるか。</td>
<td></td>
</tr>
<tr>
<td>max</td>
<td></td>
<td></td>
</tr>
<tr>
<td>maxLength</td>
<td>与えられた整数 &gt; 0 &amp;&amp; &lt; param2かどうか</td>
<td></td>
</tr>
<tr>
<td>min</td>
<td></td>
<td></td>
</tr>
<tr>
<td>minLength</td>
<td></td>
<td></td>
</tr>
<tr>
<td>not</td>
<td></td>
<td>REGEX関連。</td>
</tr>
<tr>
<td>notContains</td>
<td></td>
<td></td>
</tr>
<tr>
<td>notEmpty</td>
<td></td>
<td></td>
</tr>
<tr>
<td>notIn</td>
<td>モデルアトリビュートの値が定義されたバリデータの値の範囲内（なおかつ同じ型）に存在するか。</td>
<td>文字列と配列を処理できます。</td>
</tr>
<tr>
<td>notNull</td>
<td>内容はNULLでないかどうか。</td>
<td></td>
</tr>
<tr>
<td>notRegex</td>
<td></td>
<td></td>
</tr>
<tr>
<td>null</td>
<td>内容がNULLかどうか。</td>
<td></td>
</tr>
<tr>
<td>number</td>
<td>数字かどうか。</td>
<td>NaNは数字とみなされます。</td>
</tr>
<tr>
<td>numeric</td>
<td>文字列は数字のみを含むかどうか。</td>
<td></td>
</tr>
<tr>
<td>object</td>
<td>オブジェクトのLanguage typeであるかどうか。</td>
<td>配列、関数、オブジェクト、正規表現、new Number(0)とnew String('')がパスします !</td>
</tr>
<tr>
<td>regex</td>
<td></td>
<td></td>
</tr>
<tr>
<td>protected</td>
<td>モデルインスタンスでtoJSONが呼び出された時にこのアトリビュートは取り除かれるべきか。</td>
<td></td>
</tr>
<tr>
<td>required</td>
<td>レコードが作成される前の段階で何らかの正当な値が入っている必要があるかどうか。</td>
<td></td>
</tr>
<tr>
<td>string</td>
<td>文字列かどうか</td>
<td></td>
</tr>
<tr>
<td>text</td>
<td>文字列かどうか</td>
<td></td>
</tr>
<tr>
<td>truthy</td>
<td>JavascriptエンジンがFalseとみなすものかどうか。</td>
<td>訳注：多分Tureの誤植。</td>
</tr>
<tr>
<td>undefined</td>
<td>Javascriptエンジンが'undefined'とみなすものかどうか。</td>
<td></td>
</tr>
<tr>
<td>unique</td>
<td>新しいレコードのアトリビュートがユニークかどうか。</td>
<td></td>
</tr>
<tr>
<td>uppercase</td>
<td>文字列が全て大文字かどうか。</td>
<td></td>
</tr>
<tr>
<td>url</td>
<td>文字列がURLの形式かどうか。</td>
<td></td>
</tr>
<tr>
<td>urlish</td>
<td>文字列が何らかの拡張子を含むルートかどうか。</td>
<td>/^\s([^\/]+.)+.+\s*$/g</td>
</tr>
<tr>
<td>uuid</td>
<td>文字列はUUID(v3,v4,もしくはv5)か。</td>
<td></td>
</tr>
<tr>
<td>uuidv3</td>
<td>文字列はUUID(v3)か。</td>
<td></td>
</tr>
<tr>
<td>uuidv4</td>
<td>文字列はUUID(v4)か。</td>
<td></td>
</tr>
</tbody>
</table>
<h3>カスタムバリデーションルール</h3>
<p>タイプオブジェクトを使うとオリジナルのバリデーション規則を定義することが出来ます。ここでは別々のアトリビュートを参照し、比較することも出来ます(&quot;this&quot;を使って)。これによりバリデーションのビジネスロジックをコントローラからモデルへと移動することが出来ます。</p>
<blockquote>
<p>あなたの名づけたバリデーションスールは常に基本データ型(&quot;string&quot;, &quot;int&quot;, &quot;json&quot;など)と異なっている必要があることを覚えておいてください。</p>
</blockquote>
<h4>モデルの例</h4>
<pre><code class="language-javascript">// api/models/foo
module.exports = {

  types: {
    is_point: function(geoLocation){
      return geoLocation.x &amp;&amp; geoLocation.y
    },
    password: function(password) {
      return password === this.passwordConfirmation;
    }
  },
  attributes: {
    firstName: {
      type: 'string',
      required: true,
      minLength: 5,
      maxLength: 15
    },
    location: {
      //ベースのタイプ（Json）は依然として定義しなければなりません。
      type: 'json',
      is_point: true
    },
    password: {
      type: 'string',
      password: true
    },
    passwordConfirmation: {
      type: 'string'
    }

  }
}</code></pre>
<h3>カスタムバリデーションメッセージ</h3>
<p>Sailsはそのままではカスタムバリデーションメッセージをサポートしていませんがv0.11.0以降では<a href="http://sailsjs.org/documentation/concepts/extending-sails/Hooks">Hook</a>が利用可能です: <a href="https://github.com/lykmapipo/sails-hook-validation">sails-hook-validator</a> この使い方に関しての詳細は<a href="https://github.com/lykmapipo/sails-hook-validation">sails-hook-validator</a>レポジトリをご覧ください。</p>
<docmeta name="uniqueID" value="Validations576587">
<docmeta name="displayName" value="Validations">