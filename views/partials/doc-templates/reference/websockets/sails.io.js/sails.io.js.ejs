<h1>Socket Client (<code>sails.io.js</code>)</h1>
<blockquote>
<p>ドキュメントのこのセクションはブラウザ向けのSailsソケットクライアントSDKに関して触れています。これはJavascriptで書かれていますのでサーバでも利用可能です。</p>
<p>コミュニティプロジェクトとして、ネイティブのiOS、AndroidやWindows Phone向けのっSails/Socket.io実装もあり、これは非常に有用です。</p>
</blockquote>
<h3>概要</h3>
<p>Sailsのソケットクライアント(<a href="https://github.com/balderdashy/sails.io.js"><code>sails.io.js</code></a>)は新規のSailsアプリケーションにデフォルトでバンドルされている小型のブラウザライブラリです。これはSailsバックエンドとの間でできるだけ簡単にメッレージをやり取りすることを目的として作られたSocket.ioクライアントの上に存在する軽量なラッパーです。</p>
<p><code>sails.io.js</code>の主な役割は WebSockets/Socket.ioを使ったSailsアプリケーションとの遣り取りをするために親しみやすいajax風のインタフェースを提供することです。これは基本的には <code>.get()</code>、<code>.post()</code>、<code>.put()</code>、<code>.delete()</code>のメソッドを提供して、アプリケーションの他の部分と同じルートを再利用しながらリアルタイム機能の恩恵に預かれるようにするということを意味します。言い換えれば、ブラウザの中で<code>io.socket.post('/user')</code>を実行することはSailsアプリ―ケーションの中の同じルートへの同じHTTP POSTリクエストと全く同じようにルーティングされるということです。</p>
<h3>これは何かと一緒に使えますか</h3>
<p>はい。Sailsのソケットクライアントは（それが、angularであれ、backboneであれ、emberやknockoutなどであれ）フロントエンドフレームワークの特徴を最大限良いかして一緒に使えます。</p>
<h3>これは使わなければいけないものですか</h3>
<p>いいえ。Sailsのソケットクライアントはリアルタイムやチャットのアプリケーションを作成するのに極めて便利ですが、その他の <code>assets/</code>ディレクトリに関してはAndroidのネイティブアプリケーションやインタフェースを含まないAPIを作っている時にはおそらく特に便利ではないでしょう。</p>
<p>幸い、Sailsにおける他の全てのboilerplateファイルやフォルダーと同様にソケットクライアントは完全に任意項目です。この機能の削除は単に<code>assets/js/dependencies/sails.io.js</code>を削除するだけでできます。</p>
<!--
  TODO: 幾つかの点に関してもう少し技術的な説明が必要です。
内部的にはsails.io.jsはSocket.ioメッセージをSailsによって解釈された際にはblueprintやルーティング設定にしたがって適切なポリシーやコントローラにルーティングされるように予約された名前を使って行うものです。
-->
<docmeta name="uniqueID" value="BrowserSDK293544">
<docmeta name="displayName" value="Socket Client">
<docmeta name="stabilityIndex" value="3">