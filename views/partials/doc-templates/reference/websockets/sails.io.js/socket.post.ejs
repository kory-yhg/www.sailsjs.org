<h1>socket.post()</h1>
<p>仮想的なPOSTリクエストをSocket.ioを使っているサーバに送信します。</p>
<h3>使い方</h3>
<pre><code class="language-js">io.socket.post(url, data, function (data, jwres){
  // ...
});</code></pre>
<table>
<thead>
<tr>
<th></th>
<th>引数</th>
<th style="text-align: center;">型</th>
<th>詳細</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><code>url</code></td>
<td style="text-align: center;">((string))</td>
<td>宛先のURLパス。（例：&quot;/checkout&quot;）</td>
</tr>
<tr>
<td>2</td>
<td><code>data</code></td>
<td style="text-align: center;">((*))</td>
<td>（オプションのリクエストデータ）存在する場合、URLエンコードされ、<code>url</code>に追加されます。（urlに含まれる既存のパラメータも温存されます。）</td>
</tr>
<tr>
<td>3</td>
<td><code>callback</code></td>
<td style="text-align: center;">((function))</td>
<td>（オプションのコールバック）存在する場合、サーバがレスポンスを返した時にコールされます。</td>
</tr>
</tbody>
</table>
<h5>コールバック</h5>
<table>
<thead>
<tr>
<th></th>
<th>引数</th>
<th style="text-align: center;">型</th>
<th>詳細</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><code>resData</code></td>
<td style="text-align: center;">((*))</td>
<td>Sailsサーバから返されたデータ(=== <code>jwres.body</code>、HTTPレスポンスボディと同等)</td>
</tr>
<tr>
<td>2</td>
<td><code>jwres</code></td>
<td style="text-align: center;">((JWR))</td>
<td><a href="https://github.com/balderdashy/sails-docs/blob/master/PAGE_NEEDED.md">JSON WebSocket Response</a> オブジェクト。<code>headers</code>と<code>body</code>、<code>statusCode</code>を持っています。</td>
</tr>
</tbody>
</table>
<h3>使用例</h3>
<pre><code class="language-html">&lt;script&gt;
io.socket.post('/users', { name: 'Timmy Mendez' }, function (resData) {
  resData; // =&gt; {id:9, name: 'Timmy Mendez'}
});
&lt;/script&gt;</code></pre>
<docmeta name="uniqueID" value="socketpost175407">
<docmeta name="displayName" value="io.socket.post()">