<h1>sails.sockets.join()</h1>
<p>一般的なroomをsocketでサブスクライブします。</p>
<h3>使い方</h3>
<pre><code class="language-js">sails.sockets.join(socket, roomName);</code></pre>
<table>
<thead>
<tr>
<th></th>
<th>引数</th>
<th style="text-align: center;">型</th>
<th>詳細</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td><code>socket</code></td>
<td style="text-align: center;">((string)) あるいは ((socket))</td>
<td>サブスクライブするソケットソケットのIDまたはソケットオブジェクトで特定可能。</td>
</tr>
<tr>
<td>2</td>
<td><code>roomName</code></td>
<td style="text-align: center;">((string))</td>
<td>ソケットがサブスクライブするroomの名前。roomが存在しなければ新規作成されます。</td>
</tr>
</tbody>
</table>
<h3>使用例</h3>
<p>コントローラアクションで:</p>
<pre><code class="language-javascript">subscribeToFunRoom: function(req, res) {
  var roomName = req.param('roomName');
  sails.sockets.join(req.socket, roomName);
  res.json({
    message: 'Subscribed to a fun room called '+roomName+'!'
  });
}</code></pre>
<p><em>備考:<code>req.socket</code>はアクションがソケットリクエストによってトリガーされた時にのみ有効です。例：<code>socket.get('/subscribeToFunRoom/someRoomName')</code></em></p>
<h3>備考</h3>
<blockquote>
<ul>
<li>ここでの&quot;request socket&quot;はアプリケーションレイヤーのWebSocket/Socket.ioコネクションを意味します。<code>req.socket</code>はHTTPリクエストにも存在しますが、これはその下のトランスポートレイヤーに存在するTCPソケットを表すものでこれとは違います。この方法で<code>req.socket</code>を使う前に<code>req.isSocket == true</code>であることを確認して下さい。</li>
</ul>
</blockquote>
<docmeta name="uniqueID" value="sailssocketsjoin958690">
<docmeta name="displayName" value="sails.sockets.join()">