<h1>sails.sockets.emit( <code>socketIds</code>, [<code>event</code>], <code>data</code>)</h1>
<h3>Purpose</h3>
<p>Send a message to one or more sockets by ID.</p>
<h3>Overview</h3>
<h4>Parameters</h4>
<table>
<thead>
<tr>
<th></th>
<th>Description</th>
<th>Accepted Data Types</th>
<th>Required ?</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>IDs of sockets to receive message</td>
<td><code>string</code>, <code>array</code></td>
<td>Yes</td>
</tr>
<tr>
<td>2</td>
<td>Event name</td>
<td><code>string</code></td>
<td>No</td>
</tr>
<tr>
<td>3</td>
<td>Message data</td>
<td><code>object</code></td>
<td>Yes</td>
</tr>
</tbody>
</table>
<h3>Example Usage</h3>
<pre><code class="language-javascript">// Controller action

sayHiToFriend: function(req, res) {
    var friendId = req.param('friendId');
    sails.sockets.emit(friendId, 'privateMessage', {from: req.session.userId, msg: 'Hi!'});
    res.json({
      message: 'Message sent!'
    });
}</code></pre>
<h3>Notes</h3>
<blockquote>
<ul>
<li>If the event name is not specified then the &quot;message&quot; event will be used by default. This would allow the target sockets to listen on the &quot;message&quot; event in order to react to the emit.</li>
</ul>
</blockquote>
<docmeta name="uniqueID" value="sailssocketsemit963182">
<docmeta name="displayName" value="sails.sockets.emit()">