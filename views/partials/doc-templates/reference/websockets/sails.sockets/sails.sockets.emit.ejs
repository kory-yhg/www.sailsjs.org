<h1>sails.sockets.emit( <code>socketIds</code>, [<code>event</code>], <code>data</code>)</h1>
<h3>目的</h3>
<p>IDを使って、一つもしくは複数のソケットにメッセージを送信します。</p>
<h3>概要</h3>
<h4>パラメータ</h4>
<table>
<thead>
<tr>
<th></th>
<th>記述</th>
<th>入力できるデータ型</th>
<th>必須か</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>メッセージを受け取るソケットのID</td>
<td><code>string</code>, <code>array</code></td>
<td>はい</td>
</tr>
<tr>
<td>2</td>
<td>イベント名</td>
<td><code>string</code></td>
<td>いいえ</td>
</tr>
<tr>
<td>3</td>
<td>メッセージのデータ</td>
<td><code>object</code></td>
<td>はい</td>
</tr>
</tbody>
</table>
<h3>使用例</h3>
<pre><code class="language-javascript">// コントローラアクション

sayHiToFriend: function(req, res) {
    var friendId = req.param('friendId');
    sails.sockets.emit(friendId, 'privateMessage', {from: req.session.userId, msg: 'Hi!'});
    res.json({
      message: 'Message sent!'
    });
}</code></pre>
<h3>備考</h3>
<blockquote>
<ul>
<li>イベント名が指定されていない時、&quot;message&quot;イベントがデフォルトで使われます。これによって対象のソケットが&quot;message&quot;イベントをリッスンすることで送信されたメッセージに反応することができます。</li>
</ul>
</blockquote>
<docmeta name="uniqueID" value="sailssocketsemit963182">
<docmeta name="displayName" value="sails.sockets.emit()">