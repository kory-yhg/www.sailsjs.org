<h1>.subscribers(<code>record</code>,[<code>contexts</code>])</h1>
<h3>目的</h3>
<p><code>record</code>を購読しているソケットの配列を返します。これは<a href="http://sailsjs.jp/documentation/reference/websockets/sails.sockets/sails.sockets.emit.html"><code>sails.sockets.emit</code></a>のような低レベルのメソッドと一緒に使ってカスタムメッセージを特定のソケット群に送信したり、 <a href="http://sailsjs.jp/documentation/reference/websockets/resourceful-pubsub/subscribe.html"><code>.subscribe</code></a>と一緒に使ってソケット群に新しいインスタンスをサブスクライブさせることができます。</p>
<table>
<thead>
<tr>
<th></th>
<th>説明</th>
<th>受け入れ可能なデータ型</th>
<th>必須か</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>レコード</td>
<td>((object)), ((integer)), ((string))</td>
<td>はい</td>
</tr>
<tr>
<td>2</td>
<td>サブスクライブしているコンテキスト</td>
<td>((string)), ((array))</td>
<td>いいえ</td>
</tr>
</tbody>
</table>
<p><em>備考</em>: <code>record</code>にはモデルのインスタンスか主キーが利用できます。</p>
<h4><code>context</code></h4>
<p>特定のコンテキスト（あるいはコンテキストの配列）を指定した場合、レコードに関してそのコンテキストをサブスクライブしているソケットのみを取得できます。</p>
<h3>利用例</h3>
<p>コントローラのコード</p>
<pre><code class="language-javascript">    // ユーザ#1を探す
    User.findOne(1).exec(function(e,userOne){
        // ユーザ#1をサブスクライブしている全てのソケットを取得する
        var subscribers = User.subscribers(userOne);
        // ユーザ#1の親友も同様にサブスクライブする。
        _.each(subscribers, function(subscriber) {
           User.subscribe(subscriber, userOne.bestFriendId);
        });
    });
</code></pre>
<docmeta name="methodType" value="pubsub">
<docmeta name="importance" value="undefined">
<docmeta name="displayName" value=".subscribers()">