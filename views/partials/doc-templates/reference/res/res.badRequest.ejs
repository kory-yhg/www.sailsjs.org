<h1>res.badRequest()</h1>
<p>このメソッドは<a href="http://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_Error">400</a> (&quot;Bad Request&quot;)レスポンスを返し、クライアントにリクエストが不正であることを示します。通常これはヘッダーのパラメータに不正があるときやアプリケーションロジックで処理できないことを意味します。</p>
<h3>使い方</h3>
<pre><code class="language-js">return res.badRequest();</code></pre>
<p><em>あるいは:</em></p>
<ul>
<li><code>return res.badRequest(data);</code></li>
<li><code>return res.badRequest(data, pathToView);</code></li>
</ul>
<h3>詳細</h3>
<p>ほかのカスタムレスポンスモジュールと同じようにこのメソッドはカスタマイズ可能です。</p>
<p>デフォルトでこれは以下のように動作します:</p>
<ul>
<li>リクエストが&quot;<a href="http://sailsjs.jp/documentation/reference/req/req.wantsJSON.html">JSONを望んでいる</a>&quot;場合（例えはリクエストがAJAXやWebSocketsその他cURLなどのRESTクライアントからのものである場合）、Sailsは与えられたエラーの<code>data</code>をJSONで返します。もし何の<code>data</code>も与えられていない時はデフォルトのレスポンスボディ（文字列の<code>"Bad Request"</code>）が送信されます。</li>
<li>リクエストがJSONを望んで <em>いない場合</em> （例:URLがブラウザに打ち込まれた場合）、Sailsはビューのうち1つを返そうとします。
<ul>
<li>特定の<code>pathToView</code>が与えられているときはSailsはそのビューを返そうとします。</li>
<li>そうではなく<code>pathToView</code>が与えられて_いない時_Sailsは適切なviewを推測しようとします。（詳しくは<a href="http://sailsjs.jp/documentation/reference/res/res.view.html"><code>res.view()</code></a>を御覧ください。）、もし適切なビューを見つけられない時Sailsは単にJSONを返します。</li>
<li>Sailsがビューを返すとき、<code>data</code>引数は<a href="http://sailsjs.jp/documentation/concepts/Views/Locals.html">view local</a>: <code>data</code>としてアクセス可能です。</li>
</ul></li>
</ul>
<h3>例</h3>
<p>デフォルトのビューを使う:</p>
<pre><code class="language-javascript">if ( req.param('amount') &lt; 500 )
  return res.badRequest(
    'Transaction limit exceeded. Please try again with an amount less than $500.'
  );
}</code></pre>
<p>カスタムのビュー使う:</p>
<pre><code class="language-javascript">if ( req.param('amount') &lt; 500 )
  return res.badRequest(
    'Transaction limit exceeded. Please try again with an amount less than $500.',
    'salesforce/leads/edit'
  );
}</code></pre>
<h3>備考</h3>
<blockquote>
<ul>
<li>このメソッドは <strong>ターミナル</strong>であり、リクエストを処理するための一般的に最後の1行であるべきです。（そのためこれらのドキュメントの使用方法では<code>return</code>を使うと考えるべきです。）。</li>
<li><code>res.badRequest()</code>は（ほかのユーザ側のレスポンスメソッドと同様に）編集や上書きが可能です。<code>/responses/badRequest.js</code>で定義されたレスポンスメソッドが実行されますが、これはSailsアプリケーションを生成する際に自動的に作成されます。<code>badRequest.js</code>が無いときはSailsは暗黙でデフォルトの振る舞いを利用します。</li>
<li>このメソッドはバリデーションチェックに失敗し、 <a href="https://github.com/balderdashy/sails-docs/blob/master/PAGE_NEEDED.md"><code>req.validate()</code></a>が呼び出された時に自動で呼びだされます。
+　デフォルトではアプリケーションが本番環境で実行されている時(すなわち<code>process.env.NODE_ENV === 'production'</code>)に於いては特定のエラー(<code>err</code>)は除外されます。</li>
</ul>
</blockquote>
<docmeta name="uniqueID" value="resbadRequest631019">
<docmeta name="displayName" value="res.badRequest()">