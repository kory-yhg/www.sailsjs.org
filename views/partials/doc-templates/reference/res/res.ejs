<h1>Response (<code>res</code>)</h1>
<h3>概要</h3>
<p>Sailsは<a href="http://nodejs.org/api/http.html">Node's HTTP server</a> 慣習のもと<a href="https://github.com/balderdashy/sails-docs/blob/master/PAGE_NEEDED.md">Express</a>上で構築されています。そのため、<code>req</code>がアクセス出来る場所からなら全て（すなわちコントローラやポリシー、カスタムレスポンス上から）その上にあるNodeとExpressのメソッドにアクセスすることが出来ます。</p>
<p>この互換性の良い副作用としては多くのケースで既存のNode.jsをSailsアプリケーションにペーストするだけで動作させることが出来ます。また、Sailsはトランスポートを気にしないリクエストインタプリタを実装していますのでSailsアプリケーションのコードはWeb Sockets対応なのです。</p>
<p>Sailsでは<code>res</code>オブジェクトに<a href="http://sailsjs.jp/documentation/reference/res/res.view.html"><code>res.view()</code></a>のような幾つかのプロパティとメソッドを追加しています。これらの機能は基礎となる実装の上の糖衣構文であり、同様にHTTP と WebSocketsをサポートします。</p>
<h3>プロトコルのサポート</h3>
<p>以下の表は複数のプロトコルにおいてSailsの<a href="http://sailsjs.jp/documentation/reference/req">Request</a>オブジェクト(<code>req</code>)でサポートされているメソッドとパラメータを示しています:</p>
<p>以下の表は複数のプロトコルにおいてSailsの<a href="http://sailsjs.jp/documentation/reference/res">Response</a>オブジェクト(<code>res</code>)でサポートされているメソッドとパラメータを示しています:</p>
<table>
<thead>
<tr>
<th></th>
<th>HTTP</th>
<th>WebSockets</th>
</tr>
</thead>
<tbody>
<tr>
<td>res.status()</td>
<td>:white_check_mark:</td>
<td>:white_check_mark:</td>
</tr>
<tr>
<td>res.set()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.get()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.cookie()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.clearCookie()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.redirect()</td>
<td>:white_check_mark:</td>
<td>:white_check_mark:</td>
</tr>
<tr>
<td>res.location()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.charset</td>
<td>:white_check_mark:</td>
<td>:white_check_mark:</td>
</tr>
<tr>
<td>res.send()</td>
<td>:white_check_mark:</td>
<td>:white_check_mark:</td>
</tr>
<tr>
<td>res.json()</td>
<td>:white_check_mark:</td>
<td>:white_check_mark:</td>
</tr>
<tr>
<td>res.jsonp()</td>
<td>:white_check_mark:</td>
<td>:white_check_mark:</td>
</tr>
<tr>
<td>res.type()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.format()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.attachment()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.sendfile()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.download()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.links()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.locals</td>
<td>:white_check_mark:</td>
<td>:white_check_mark:</td>
</tr>
<tr>
<td>res.render()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
<tr>
<td>res.view()</td>
<td>:white_check_mark:</td>
<td>:white_large_square:</td>
</tr>
</tbody>
</table>
<h3>Legend</h3>
<ul>
<li>:white_check_mark: - 完全対応</li>
<li>:white_large_square: - 実装未完</li>
<li>:heavy_multiplication_x: - プロトコルの制約により未サポート</li>
</ul>
<docmeta name="uniqueID" value="res550242">
<docmeta name="displayName" value="Response (`res`)">
<docmeta name="stabilityIndex" value="3">