<h1>req.param()</h1>
<p>指定された名前のパラメータの値を返します。</p>
<h3>使い方</h3>
<pre><code class="language-javascript">req.param(name[, defaultValue]);</code></pre>
<h3>詳細</h3>
<p><code>req.param()</code>は指定さてたパラメータのURLパス、クエリ文字列、リクエストボディを探します。指定された<code>name</code>のパラメータがどこにもない場合は<code>undefined</code>または、<code>defaultValue</code>が指定されている場合はそれを返します。</p>
<ul>
<li>URLパスパラメータ (<a href="http://sailsjs.jp/documentation/reference/req/req.params.html"><code>req.params</code></a>)
<ul>
<li>例えば、ルート<code>/foo/:id</code>へのリクエスト&quot;/foo/4&quot;は<code>{ id: 4 }</code>を持ちます。</li>
</ul></li>
<li>クエリ文字列パラメータ (<a href="http://sailsjs.jp/documentation/reference/req/req.query.html"><code>req.query</code></a>)
<ul>
<li>例えば、リクエスト&quot;/foo?email=5&quot;は<code>{ email: 5 }</code>を持ちます。</li>
</ul></li>
<li>ボディパラメータ (<a href="http://sailsjs.jp/documentation/reference/req/req.body.html"><code>req.body</code></a>)
<ul>
<li>例:パース可能なボディ（例:JSON、URLエンコードまたXML）はそのパース済みの値を持ちます。</li>
</ul></li>
</ul>
<h3>例</h3>
<p>以下の様なコードを持つコントローラ、ポリシー、またはBlueprintを指すルート(<code>POST /product/:sku</code>) を想定します。:</p>
<pre><code class="language-javascript">req.param('sku');
// -&gt; 123</code></pre>
<p>以下のいずれの方法を使って<code>sku</code>を送る際にも期待している結果が得られます。:</p>
<ul>
<li><code>POST /product/123</code></li>
<li><code>POST /product?sku=123</code></li>
<li><code>POST /product</code>
<ul>
<li>次のJSONのリクエストボディを持って: <code>{ "sku": 123 }</code></li>
</ul></li>
</ul>
<h3>備考</h3>
<blockquote>
<ul>
<li>全てのソースからの全てのパラメータ（URLパス、クエリ文字列、パース済リクエストボディ）を欲しい場合は代わりに<a href="http://sailsjs.jp/documentation/reference/req/req.allParams.html"><code>req.allParams()</code></a>が使えます。</li>
</ul>
</blockquote>
<docmeta name="uniqueID" value="reqparam149618">
<docmeta name="displayName" value="req.param()">