<h1>req.wantsJSON</h1>
<p>クライアントが（XMLやHTMLではなく）JSONレスポンスを求めていることを示すフラグです。</p>
<p><code>req.wantsJSON</code>はSailsの全ての<a href="http://sailsjs.jp/documentation/anatomy/myApp/api/responses">ビルトインのカスタムレスポンス</a>で利用されています。</p>
<h3>使い方</h3>
<pre><code class="language-js">req.wantsJSON;</code></pre>
<h3>詳細</h3>
<p><code>req.wantsJSON</code>の意図している使い道はサーバがJSONを返すべきなのか、それとも(HTMLページや302リダイレクトのような)何か別のものを返すべきなのかのクリーンで再利用可能な判断方法を提供することです。これは <em>全ての</em> コンテンツネゴシエーション問題に利用できるわけではありませんが、シンプルで殆どのケースで使える方法です。</p>
<p>例えば、URLバーに入力されたリクエストに関しては全てのメジャーなブラウザは&quot;Accept: text/plain;&quot;リクエストヘッダーを付加します。このケースでは<code>req.wantsJSON</code>はFalseです。しかし別のケースでは区別はそれほど明確ではありません。これらのシナリオではSailsは<code>req.wantsJSON</code>に最適な値をヒューリスティックに判断します。</p>
<p>厳密には、<code>req.wantsJSON</code>はリクエストの<code>"Content-type"</code>、<code>"Accepts"</code>、<code>"X-Requested-With"</code>を確認してリクエストがJSONを求めているかどうかを推測します。リクエストが確な判断ができるのに十分な情報を持っていない場合、SailsはJSONの側を選びます(すなわち<code>req.wantsJSON</code>は<code>true</code>になります)。</p>
<p>これによりアプリケーションはより未来志向で堅牢なものになります: つまり、長期的なコンテンツネゴシエーションの変化（新しい消費者向けデバイスや企業向けユーザエージェントが別のヘッダを導入するような）に対するベストプラクティスとしてSailsは<code>req.wantsJSON</code>をフレームワークレベルでパッチしてヒューリスティックをそれに応じて変更します。言うまでもなく、これによりコードの重複が抑制できそれぞれのルートでヘッダーを確認するイライラからも逃れることが出来ます。</p>
<h3>例</h3>
<pre><code class="language-javascript">if (req.wantsJSON) {
  return res.json(data);
}
else {
  return res.view(data);
}</code></pre>
<h3>詳細</h3>
<p><code>req.wantsJSON</code>がリクエストを検査する際の具体的な順序は以下のとおりです。 <strong> 以下のいずれかにマッチした時は、それから先のチェックは無視されます </strong></p>
<p>もし以下ならリクエストは&quot;wantsJSON&quot; :</p>
<ul>
<li>AJAXリクエストのように見えれば</li>
<li>ソケットからのバーチャルなリクエストに見えれば</li>
<li>明示的にHTMLを要求していなければ</li>
<li>JSONのcontent-typeヘッダーを持っていて&quot;Accept&quot;ヘッダーを持っていれば</li>
<li><code>req.options.wantsJSON</code>がTrueであれば</li>
</ul>
<h3>備考</h3>
<blockquote>
<ul>
<li>低レベルなコンテントネゴシエーションは、もちろん<code>req.is()</code>、<code>req.accepts()</code>、<code>req.xhr</code>と<code>req.get()</code>を使って行えます。</li>
<li>Sails v0.10からはWebSocketを出元とするリクエストは全て&quot;want JSON&quot;として扱われます。</li>
</ul>
</blockquote>
<docmeta name="uniqueID" value="reqwantsJSON30891">
<docmeta name="displayName" value="req.wantsJSON">