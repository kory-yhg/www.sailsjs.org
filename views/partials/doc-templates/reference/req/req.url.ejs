<h1>req.url</h1>
<p><a href="http://sailsjs.jp/documentation/reference/req/req.path.html"><code>req.path</code></a>に似ていますが、後に続くクエリー文字列も含みます</p>
<pre><code class="language-js">req.url;

// =&gt; "/search?q=worlds%20largest%20dogs"</code></pre>
<h3>備考</h3>
<blockquote>
<ul>
<li>URLのハッシュ・フラグメント部分は<a href="https://github.com/strongloop/express/issues/1083#issuecomment-5179035">サーバ側では利用不可能</a>ということを意識することは重要です。これは<a href="http://stackoverflow.com/a/2305927/486547">現在のHTTPスペックに存在する問題</a>です。そのため、サブドメイン間をリダイレクトするアクションを書く場合などはそのアクションでフラグメンションを見ることは出来ません。</li>
<li>しかしながら、もし302リダイレクト(すなわち<code>res.redirect()</code>) として扱った場合、もう一方のユーザエージェントはフラグメント・ハッシュを維持し、新しくリダイレクトされたURLでもトラックします。多くの場合、これはあなたのやりたいことそのものです。 </li>
</ul>
</blockquote>
<!--
これはすでに事実ではなさそうです:
Express/Connectのクエリ文字列パーサはNodeの通常の`req.url`ではクエリ文字列を取り除きますのでSails/Express/Koa/Connectでは`req.url`は`req.path`と同じです。使用例に関しては`req.path`を御覧ください。
-->
<docmeta name="uniqueID" value="requrl810500">
<docmeta name="displayName" value="req.url">