<h1>Populated Values</h1>
<p>Eメールアドレスや電話番号、誕生日などの基本的な促成に加えてWaterlineではアソシエーションを使ってリンクされたデータのセットを動的に取得し、保存する必要があります。クエリーが<a href="http://sailsjs.jp/documentation/reference/waterline/queries/populate.html"><code>.populate()</code></a>が呼びだされた時にはそれぞれの結果は一つまたは複数の <strong>populated values</strong> を持ちます。それら、それぞれの<strong>populated values</strong>クエリされた時点での特定のアソシエーションへのリンクを含むスナップショットです。</p>
<p>populated valueは2種類あります:</p>
<ul>
<li><code>null</code>または単なるJavaScriptオブジェクト(POJO)(合致するアソシエーションが&quot;model&quot;であれば)_</li>
<li>空の配列、または単なるJavaScriptオブジェクトの配列(合致するアソシエーションが&quot;collection&quot;であれば)_</li>
</ul>
<p>たとえは、可愛い狼の子供のオーダーを扱っているとすると:</p>
<pre><code class="language-js">Order.find()
.populate('buyers')  // a "collection" association
.populate('seller')  // a "model" association
.exec(function (err, orders){

  // this array is a snapshot of the Customers who are associated with the first Order as "buyers"
  orders[0].buyers;
  // =&gt; [ {id: 1, name: 'Rob Stark'}, {id: 6, name: 'Arya Stark'} ]

  // this object is a snapshot of the Company that is associated with the first Order as the "seller"
  orders[0].seller;
  // =&gt; { id: 42941, corporateName: 'WolvesRUs Inc.' }

  // this array is empty because the second Order doesn't have any "buyers"
  orders[1].buyers;
  // =&gt; []

  // this is `null` because there is no "seller" associated with the second Order
  orders[1].seller;
  // =&gt; null
});</code></pre>
<h3>populated valuesを編集する</h3>
<p>変更はアタッチされたレコードで<code>.save()</code>をコールすることによって永続化（すなわちデータベースにセーブ）されます。populated valueに直接<code>.save()</code>する事はできません。</p>
<p>&quot;model&quot;アソシエーションでリンクされたレコードの変更または削除は単に元のレコードにプロパティを設定することによって行えます:</p>
<pre><code class="language-js">orders[1].seller = { corporateName: 'Wolf Orphanage' };</code></pre>
<p>一方&quot;model&quot;アソシエーションに関しては、リンクされたレコードを接続または切断するための幾つかの(数えきれない)特殊なメソッドがあります。しかしながら、変更がデータベースで永続化されるためには<code>.save()</code>メソッドは依然としてもとのレコードで呼び出す必要があります。</p>
<pre><code class="language-js">orders[1].buyers.add({ name: 'Jon Snow' });
orders[1].save(function (err) { ... });</code></pre>
<h3>例</h3>
<p>最後にこれらをまとめて:</p>
<pre><code class="language-js">Order.find()
.populate('buyers')
.exec(function (err, orders){

  orders[1].buyers.add({ name: 'Jon Snow' });
  orders[1].seller = { corporateName: 'Wolf Orphanage' };
  orders[1].save(function (err) {
    // We successfully created a new Customer named Jon and added
    // him to `order[1]` as one of its "buyers".
    // We also created a new company and set it as `order[1]`'s "seller".
    //
    // If we had provided only a primary key value instead of an object,
    // in both cases Waterline would have tried to associate existing
    // Customer and Company records rather than creating new ones.
  });

});</code></pre>
<docmeta name="uniqueID" value="populatedvalues790682">
<docmeta name="displayName" value="Populated Values">