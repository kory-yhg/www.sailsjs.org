<h1>* .save(<code>callback</code>)</h1>
<h3>目的</h3>
<p><code>save()</code>メソッドは現在の属性を使ってデータベースのレコードを更新します。これは新しく保存されたオブジェクトをコールバックで返します。</p>
<h3>概要</h3>
<h4>パラメータ</h4>
<table>
<thead>
<tr>
<th>#</th>
<th>説明</th>
<th>受け入れられるデータ型</th>
<th>必須か</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>コールバック</td>
<td><code>function</code></td>
<td>はい</td>
</tr>
</tbody>
</table>
<h4>コールバックパラメータ</h4>
<table>
<thead>
<tr>
<th>#</th>
<th>説明</th>
<th>想定されるデータ型</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>エラー</td>
<td><code>Error</code></td>
</tr>
<tr>
<td>2</td>
<td>保存されたデータ</td>
<td><code>{}</code></td>
</tr>
</tbody>
</table>
<h3>使用例</h3>
<pre><code class="language-javascript">User.find().exec(
  function(err,myRecords){

    // Grab a record off the top of the returned array and save a new attribute to it
    var getOneRecord = myRecords.pop();
    getOneRecord.name = 'Hank';
    getOneRecord.save(
      function(err,s){
        console.log('User with ID '+s.id+' now has name '+s.name);
      });
  });

// User with ID 1 now has name Hank

// Don't forget to handle your errors.
// Don't forget to abide by the rules you set in your model
</code></pre>
<h3>備考</h3>
<blockquote>
<p>これはインスタンスメソッドです。現在、インスタンスメソッドはトランザクション出来ません。そのため、同じ意味を持つモデルメソッドを使うことをおすすめします。  </p>
</blockquote>
<docmeta name="uniqueID" value="save581656">
<docmeta name="methodType" value="association">
<docmeta name="importance" value="undefined">
<docmeta name="displayName" value=".save()">