<h1>* .validate(<code>callback</code>)</h1>
<h3>目的</h3>
<p>現在のキーと値がモデルで指定された属性オブジェクトに適合するかを確認します。</p>
<h3>概要</h3>
<h4>パラメータ</h4>
<table>
<thead>
<tr>
<th>#</th>
<th>説明</th>
<th>受け入れられるデータ型</th>
<th>必須か</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>コールバック</td>
<td><code>function</code></td>
<td>はい</td>
</tr>
</tbody>
</table>
<h4>コールバックパラメータ</h4>
<table>
<thead>
<tr>
<th>#</th>
<th>説明</th>
<th>想定されるデータ型</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>エラー</td>
<td><code>Error</code></td>
</tr>
</tbody>
</table>
<h3>使用例</h3>
<pre><code class="language-javascript">User.find().exec(
  function(err,myRecords){

    // Grab a record off the top, change it to the wrong data type, then try to validate
    var getOneRecord = myRecords.pop();
    getOneRecord.name = ['Marie','Hank'];
    getOneRecord.name.validate(
      function(err){
        if (err)
          console.log(JSON.stringify(err));
      });
  });

// {"ValidationError":{"name":[{"data":["Marie","Hank"],"message":"Validation error: \"Marie,Hank\" is not of type \"string\"","rule":"string"}]}}
</code></pre>
<p>モデルで</p>
<pre><code class="language-javascript">module.exports = {

  attributes: {
    name: 'string'

  }

};</code></pre>
<h3>備考</h3>
<blockquote>
<p>これは<code>Model.validate({ attributes }, cb)</code>の短縮版です。
バリデーション無しで<code>.save()</code>した場合、Waterlineはまずコンバートを試みて、それでも出来なければエラーを返します。
このケースでは、配列は'Marie,Hank'のような文字列に置き換えられます。</p>
<p>エラー長い限り、コールバックのパラメータはありません。便りがないのは良い便りです。</p>
<p>これはインスタンスメソッドです。現在、インスタンスメソッドはトランザクション出来ません。そのため、同じ意味を持つモデルメソッドを使うことをおすすめします。  </p>
</blockquote>
<docmeta name="uniqueID" value="validate76690">
<docmeta name="methodType" value="instance">
<docmeta name="importance" value="undefined">
<docmeta name="displayName" value=".validate()">