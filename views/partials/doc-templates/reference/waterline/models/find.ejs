<h1>.find(<code>criteria</code> , [<code>callback</code>])</h1>
<h3>目的</h3>
<p>渡した条件オブジェクトに合うレコードを検索して返します。</p>
<h3>概要</h3>
<h4>パラメータ</h4>
<table>
<thead>
<tr>
<th>#</th>
<th>説明</th>
<th>受け入れられるデータ型</th>
<th>必須か</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>検索条件</td>
<td><code>{}</code>,<code>[{}]</code>, <code>string</code>, <code>int</code></td>
<td>はい</td>
</tr>
<tr>
<td>2</td>
<td>コールバック</td>
<td><code>function</code></td>
<td>はい</td>
</tr>
</tbody>
</table>
<h4>コールバックパラメータ</h4>
<table>
<thead>
<tr>
<th>#</th>
<th>説明</th>
<th>想定されるデータ型</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>エラー</td>
<td><code>Error</code></td>
</tr>
<tr>
<td>2</td>
<td>見つかったレコード</td>
<td><code>[{}]</code></td>
</tr>
</tbody>
</table>
<h3>使用例</h3>
<pre><code class="language-javascript">User.find({}).exec(function findCB(err, found){
  while (found.length)
    console.log('Found User with name ' + found.pop().name)
});

// Found User with name Flynn
// Found User with name Jessie

// Don't forget to handle your errors
</code></pre>
<h3>備考</h3>
<blockquote>
<p>全ての文字列引数はレコードのIDである必要があります。
このメソッドは結果を常に配列で返します。
配列である属性探したい場合、追加のカッコで囲まなければWaterlineはinQueryを行いたいと解釈してしまいます。</p>
</blockquote>
<docmeta name="uniqueID" value="find816978">
<docmeta name="methodType" value="mcm">
<docmeta name="importance" value="10">
<docmeta name="displayName" value=".find()">