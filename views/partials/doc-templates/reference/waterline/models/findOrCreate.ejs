<h1>.findOrCreate( <code>criteria</code> , <code>record</code> , [<code>callback</code>] )</h1>
<h3>目的</h3>
<p>1つ目のパラメータでレコードの存在を確認します。もし見つからなければ2つ目のパラメータのレコードが作成されます。</p>
<h3>概要</h3>
<h4>パラメータ</h4>
<table>
<thead>
<tr>
<th>#</th>
<th>説明</th>
<th>受け入れられるデータ型</th>
<th>必須か</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>検索条件</td>
<td><code>{}</code>,<code>[{}]</code>, <code>string</code>, <code>int</code></td>
<td>はい</td>
</tr>
<tr>
<td>2</td>
<td>作成するレコード</td>
<td><code>{}</code>,<code>[{}]</code></td>
<td>はい</td>
</tr>
<tr>
<td>3</td>
<td>コールバック</td>
<td><code>function</code></td>
<td>はい</td>
</tr>
</tbody>
</table>
<h4>コールバックパラメータ</h4>
<table>
<thead>
<tr>
<th>#</th>
<th>説明</th>
<th>想定されるデータ型</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>エラー</td>
<td><code>Error</code></td>
</tr>
<tr>
<td>2</td>
<td>作成したレコード</td>
<td><code>{}</code>, <code>[{}]</code></td>
</tr>
</tbody>
</table>
<h3>使用例</h3>
<pre><code class="language-javascript">User.findOrCreate({name:'Walter'}, {name:'Jessie'}).exec(function createFindCB(err, record){
  console.log('What\'s cookin\' '+record.name+'?');
});

// What's cookin' Jessie?
// Don't forget to handle your errors and abide by the rules you defined in your model
</code></pre>
<h3>備考</h3>
<blockquote>
<p>全ての文字列引数はレコードのIDである必要があります。
配列である属性探したい場合、追加のカッコで囲まなければWaterlineはinQueryを行いたいと解釈してしまいます。</p>
</blockquote>
<docmeta name="uniqueID" value="findOrCreate760631">
<docmeta name="methodType" value="mcm">
<docmeta name="importance" value="undefined">
<docmeta name="displayName" value=".findOrCreate()">