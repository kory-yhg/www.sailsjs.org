<h1>sails.config.session</h1>
<h3>What is this?</h3>
<p>Sails session integration leans heavily on the great work already done by Express, but also unifies Socket.io with the Connect session store.</p>
<h3>Description</h3>
<p>Sails session integration leans heavily on the great work already done by Express, but also unifies
Socket.io with the Connect session store. It uses Connect&rsquo;s cookie parser to normalize configuration
differences between Express and Socket.io and hooks into Sails&rsquo; middleware interpreter to allow you
to access and auto-save to <code>req.session</code> with Socket.io the same way you would with Express.</p>
<h4><code>secret</code></h4>
<p>Session secret is automatically generated when your new app is created.
Replace at your own risk in production-- you will invalidate the cookies of your users, forcing them to log in again. </p>
<h3><code>key</code></h3>
<p>Session key is set as <code>sails.sid</code> by default.
This is the name used in the cookie to recover the session.</p>
<p>If you are runing multiple instances of sails, you can lost your session with Websocket.
Replace key by an unique name, solve this issue.</p>
<h4>Shared Redis session store</h4>
<p>In production, uncomment the following line to set up a shared redis session store
that can be shared across multiple Sails.js servers.</p>
<pre><code class="language-javascript">adapter: 'redis',</code></pre>
<p>The following values are optional, if no options are set a redis instance running
on localhost is expected.
Read more about options at: <a href="https://github.com/visionmedia/connect-redis">https://github.com/visionmedia/connect-redis</a></p>
<pre><code class="language-javascript">        host: 'localhost',
        port: 6379,
        ttl: &lt;redis session TTL in seconds&gt;,
        db: 0,
        pass: &lt;redis auth password&gt;
        prefix: 'sess:'</code></pre>
<p>Uncomment the following lines to use your Mongo adapter as a session store</p>
<pre><code class="language-javascript">        adapter: 'mongo',

        host: 'localhost',
        port: 27017,
        db: 'sails',
        collection: 'sessions',</code></pre>
<p>Optional Values:</p>
<pre><code class="language-javascript">        // Note: url will override other connection settings
        // url: 'mongodb://user:pass@host:port/database/collection',

        username: '',
        password: '',
        auto_reconnect: false,
        ssl: false,
        stringify: true
</code></pre>
<docmeta name="uniqueID" value="sailsconfigsession786744">
<docmeta name="displayName" value="sails.config.session">