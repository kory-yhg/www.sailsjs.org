<h1>myApp/config/routes.js</h1>
<h3>目的</h3>
<p>このファイルはクライアントと、彼らがリクエストしたリソースをつなげるための明示的なルートを定義します。</p>
<p>ユーザがアプリケーションにアクセスした時にSailsはリクエストされたURLと、認証されたそれに適切なコントローラアクションをひも付け、リクエストされたリソースをクライアントに応答するために、このファイル（と幾つかのファイル）を</p>
<p>デフォルトでは明示されたルートは一つしかありません。この目的はユーザがベースURL<code>http://localhost:1337/</code>にアクセスした時に<code>myApp/views/home/index.ejs</code>を指定するためのものです。ご自由に好きなだけこのファイルにルートを追加してください。</p>
<p>さらにURLの一部をリクエストパラメータとして扱うようなルートも指定出来ます。例えば<code>http://localhost:1337/ponies/PinkiePie</code>は'id'が'PinkiePie'のリソースにアクセスします。</p>
<docmeta name="uniqueID" value="routesjs120276">
<docmeta name="displayName" value="routes.js">

```
/**
 * Route Mappings
 * (sails.config.routes)
 *
 * Your routes map URLs to views and controllers.
 *
 * If Sails receives a URL that doesn't match any of the routes below,
 * it will check for matching files (images, scripts, stylesheets, etc.)
 * in your assets directory.  e.g. `http://localhost:1337/images/foo.jpg`
 * might match an image file: `/assets/images/foo.jpg`
 *
 * Finally, if those don't match either, the default 404 handler is triggered.
 * See `config/404.js` to adjust your app's 404 logic.
 *
 * Note: Sails doesn't ACTUALLY serve stuff from `assets`-- the default Gruntfile in Sails copies
 * flat files from `assets` to `.tmp/public`.  This allows you to do things like compile LESS or
 * CoffeeScript for the front-end.
 *
 * For more information on routes, check out:
 * http://links.sailsjs.org/docs/config/routes
 */

module.exports.routes = {

  // Make the view located at `views/homepage.ejs` (or `views/homepage.jade`, etc. depending on your
  // default view engine) your home page.
  //
  // (Alternatively, remove this and add an `index.html` file in your `assets` directory)
  '/': {
    view: 'homepage'
  },

  // Custom routes here...

  // If a request to a URL doesn't match any of the custom routes above,
  // it is matched against Sails route blueprints.  See `config/blueprints.js`
  // for configuration options and examples.

};

```